#include "beremiz.h"
#ifndef __POUS_H
#define __POUS_H

#include "accessor.h"
#include "iec_std_lib.h"

__DECLARE_ENUMERATED_TYPE(LOGLEVEL,
  LOGLEVEL__CRITICAL,
  LOGLEVEL__WARNING,
  LOGLEVEL__INFO,
  LOGLEVEL__DEBUG
)
// FUNCTION_BLOCK LOGGER
// Data part
typedef struct {
  // FB Interface - IN, OUT, IN_OUT variables
  __DECLARE_VAR(BOOL,EN)
  __DECLARE_VAR(BOOL,ENO)
  __DECLARE_VAR(BOOL,TRIG)
  __DECLARE_VAR(STRING,MSG)
  __DECLARE_VAR(LOGLEVEL,LEVEL)

  // FB private variables - TEMP, private and located variables
  __DECLARE_VAR(BOOL,TRIG0)

} LOGGER;

void LOGGER_init__(LOGGER *data__, BOOL retain);
// Code part
void LOGGER_body__(LOGGER *data__);
// FUNCTION_BLOCK PYTHON_EVAL
// Data part
typedef struct {
  // FB Interface - IN, OUT, IN_OUT variables
  __DECLARE_VAR(BOOL,EN)
  __DECLARE_VAR(BOOL,ENO)
  __DECLARE_VAR(BOOL,TRIG)
  __DECLARE_VAR(STRING,CODE)
  __DECLARE_VAR(BOOL,ACK)
  __DECLARE_VAR(STRING,RESULT)

  // FB private variables - TEMP, private and located variables
  __DECLARE_VAR(DWORD,STATE)
  __DECLARE_VAR(STRING,BUFFER)
  __DECLARE_VAR(STRING,PREBUFFER)
  __DECLARE_VAR(BOOL,TRIGM1)
  __DECLARE_VAR(BOOL,TRIGGED)

} PYTHON_EVAL;

void PYTHON_EVAL_init__(PYTHON_EVAL *data__, BOOL retain);
// Code part
void PYTHON_EVAL_body__(PYTHON_EVAL *data__);
// FUNCTION_BLOCK PYTHON_POLL
// Data part
typedef struct {
  // FB Interface - IN, OUT, IN_OUT variables
  __DECLARE_VAR(BOOL,EN)
  __DECLARE_VAR(BOOL,ENO)
  __DECLARE_VAR(BOOL,TRIG)
  __DECLARE_VAR(STRING,CODE)
  __DECLARE_VAR(BOOL,ACK)
  __DECLARE_VAR(STRING,RESULT)

  // FB private variables - TEMP, private and located variables
  __DECLARE_VAR(DWORD,STATE)
  __DECLARE_VAR(STRING,BUFFER)
  __DECLARE_VAR(STRING,PREBUFFER)
  __DECLARE_VAR(BOOL,TRIGM1)
  __DECLARE_VAR(BOOL,TRIGGED)

} PYTHON_POLL;

void PYTHON_POLL_init__(PYTHON_POLL *data__, BOOL retain);
// Code part
void PYTHON_POLL_body__(PYTHON_POLL *data__);
// FUNCTION_BLOCK PYTHON_GEAR
// Data part
typedef struct {
  // FB Interface - IN, OUT, IN_OUT variables
  __DECLARE_VAR(BOOL,EN)
  __DECLARE_VAR(BOOL,ENO)
  __DECLARE_VAR(UINT,N)
  __DECLARE_VAR(BOOL,TRIG)
  __DECLARE_VAR(STRING,CODE)
  __DECLARE_VAR(BOOL,ACK)
  __DECLARE_VAR(STRING,RESULT)

  // FB private variables - TEMP, private and located variables
  PYTHON_EVAL PY_EVAL;
  __DECLARE_VAR(UINT,COUNTER)
  __DECLARE_VAR(UINT,ADD10_OUT)
  __DECLARE_VAR(BOOL,EQ13_OUT)
  __DECLARE_VAR(UINT,SEL15_OUT)
  __DECLARE_VAR(BOOL,AND7_OUT)

} PYTHON_GEAR;

void PYTHON_GEAR_init__(PYTHON_GEAR *data__, BOOL retain);
// Code part
void PYTHON_GEAR_body__(PYTHON_GEAR *data__);
__DECLARE_ARRAY_TYPE(__ARRAY_OF_INT_11_11,INT,[11][11])
// FUNCTION_BLOCK SUPERSTATEAP
// Data part
typedef struct {
  // FB Interface - IN, OUT, IN_OUT variables
  __DECLARE_VAR(BOOL,EN)
  __DECLARE_VAR(BOOL,ENO)
  __DECLARE_VAR(UINT,ROW)
  __DECLARE_VAR(UINT,COL)
  __DECLARE_VAR(INT,OUT)

  // FB private variables - TEMP, private and located variables
  __DECLARE_VAR(__ARRAY_OF_INT_11_11,TRANSITIONMATRIX)

} SUPERSTATEAP;

void SUPERSTATEAP_init__(SUPERSTATEAP *data__, BOOL retain);
// Code part
void SUPERSTATEAP_body__(SUPERSTATEAP *data__);
__DECLARE_ARRAY_TYPE(__ARRAY_OF_WORD_12,WORD,[12])
__DECLARE_ARRAY_TYPE(__ARRAY_OF_BYTE_12,BYTE,[12])
// PROGRAM MOOREAUTOMATON
// Data part
typedef struct {
  // PROGRAM Interface - IN, OUT, IN_OUT variables

  // PROGRAM private variables - TEMP, private and located variables
  __DECLARE_VAR(BOOL,A0)
  __DECLARE_VAR(BOOL,A1)
  __DECLARE_VAR(BOOL,B0)
  __DECLARE_VAR(BOOL,B1)
  __DECLARE_VAR(BOOL,C0)
  __DECLARE_VAR(BOOL,C1)
  __DECLARE_VAR(BOOL,D0)
  __DECLARE_VAR(BOOL,D1)
  __DECLARE_VAR(WORD,PROX)
  __DECLARE_VAR(INT,CURRENTSTATE)
  __DECLARE_VAR(WORD,SENSOROUTPUT)
  __DECLARE_VAR(BYTE,CONTROLLEROUTPUT)
  __DECLARE_VAR(INT,TESTVAR)
  __DECLARE_VAR(INT,COL)
  __DECLARE_VAR(INT,TMP)
  __DECLARE_VAR(DINT,TMP0)
  SUPERSTATEAP SUPERSTATE;
  __DECLARE_VAR(__ARRAY_OF_WORD_12,STATE)
  __DECLARE_VAR(__ARRAY_OF_WORD_12,TRANSITIONMASKS)
  __DECLARE_VAR(__ARRAY_OF_INT_11_11,TRANSITIONMATRIX)
  __DECLARE_VAR(__ARRAY_OF_BYTE_12,STATEOUTPUT)

} MOOREAUTOMATON;

void MOOREAUTOMATON_init__(MOOREAUTOMATON *data__, BOOL retain);
// Code part
void MOOREAUTOMATON_body__(MOOREAUTOMATON *data__);
#endif //__POUS_H
